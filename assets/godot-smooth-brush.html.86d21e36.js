import{e as r,f as d,g as k,r as i,o as v,c as b,a as n,b as s,d as t,w as m,t as l,h as c,_ as h}from"./app.d9ef6744.js";const _=c('<h1 id="基于动力学模型的画笔去抖动" tabindex="-1"><a class="header-anchor" href="#基于动力学模型的画笔去抖动" aria-hidden="true">#</a> 基于动力学模型的画笔去抖动</h1><div class="custom-container warning"><p class="custom-container-title">注意</p><p>此文并未完成，此研究也仍未完成</p></div><h2 id="相关知识" tabindex="-1"><a class="header-anchor" href="#相关知识" aria-hidden="true">#</a> 相关知识</h2><p>在物理世界，由人类手部肌肉控制的画笔笔尖做的是连续运动，然而数位板、鼠标等电子设备所采集的信号是离散的。它们不同的回报率、采样率以及其它干扰因素会使得采集设备得到的一系列点出现抖动</p><ul><li>需要应用算法解决的一系列问题 <ul><li>去除干扰画笔抖动</li><li>补足原本的连续性</li><li>进一步平滑化线条</li><li>效率高、实时性好</li></ul></li></ul><h2 id="关键代码" tabindex="-1"><a class="header-anchor" href="#关键代码" aria-hidden="true">#</a> 关键代码</h2>',6),f={href:"https://github.com/HK-SHAO/Plotter",target:"_blank",rel:"noopener noreferrer"},g=c(`<ul><li>一个基于物理的简单追逐模型</li></ul><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code><span class="token keyword">class_name</span> <span class="token class-name">DrawBoard</span>

<span class="token keyword">extends</span> <span class="token class-name">Control</span>

@<span class="token keyword">export</span> <span class="token keyword">var</span> default_line<span class="token punctuation">:</span> <span class="token class-name">Line2D</span>

@<span class="token function">export_range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">var</span> smooth<span class="token punctuation">:</span> <span class="token class-name">float</span> <span class="token operator">=</span> <span class="token number">0.5</span>
@<span class="token function">export_range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token keyword">var</span> sensitivity<span class="token punctuation">:</span> <span class="token class-name">float</span> <span class="token operator">=</span> <span class="token number">5000</span>

@<span class="token keyword">onready</span> <span class="token keyword">var</span> lines<span class="token punctuation">:</span> <span class="token class-name">Node2D</span> <span class="token operator">=</span> <span class="token variable">$Lines</span>


<span class="token keyword">var</span> cur_line_2d<span class="token punctuation">:</span> <span class="token class-name">Line2D</span> <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token keyword">var</span> is_left_pressed <span class="token operator">=</span> <span class="token boolean">false</span>

<span class="token keyword">var</span> brush_position<span class="token punctuation">:</span> <span class="token class-name">Vector2</span>
<span class="token keyword">var</span> ink_position<span class="token punctuation">:</span> <span class="token class-name">Vector2</span>
<span class="token keyword">var</span> point_position<span class="token punctuation">:</span> <span class="token class-name">Vector2</span>

<span class="token keyword">func</span> <span class="token function">_ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	<span class="token keyword">pass</span>

<span class="token keyword">func</span> <span class="token function">_input</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span> <span class="token class-name">InputEvent</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> event <span class="token keyword">is</span> InputEventMouseMotion<span class="token punctuation">:</span>
		<span class="token function">_input_event_mouse_motion</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>
	<span class="token keyword">elif</span> event <span class="token keyword">is</span> InputEventMouseButton<span class="token punctuation">:</span>
		<span class="token function">_input_event_mouse_button</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>
	<span class="token keyword">elif</span> event <span class="token keyword">is</span> InputEventKey<span class="token punctuation">:</span>
		<span class="token function">_input_event_key</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">_input_event_mouse_motion</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span> <span class="token class-name">InputEventMouseMotion</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> is_left_pressed<span class="token punctuation">:</span>
		brush_position <span class="token operator">=</span> event<span class="token punctuation">.</span>position

<span class="token keyword">func</span> <span class="token function">_input_event_mouse_button</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span> <span class="token class-name">InputEventMouseButton</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	<span class="token keyword">var</span> is_pressed <span class="token operator">:=</span> event<span class="token punctuation">.</span><span class="token function">is_pressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> event<span class="token punctuation">.</span>button_index <span class="token operator">==</span> <span class="token constant">MOUSE_BUTTON_LEFT</span><span class="token punctuation">:</span>
		is_left_pressed <span class="token operator">=</span> is_pressed

		<span class="token keyword">if</span> <span class="token keyword">not</span> is_left_pressed<span class="token punctuation">:</span>
			<span class="token comment"># 释放掉当前线条的引用</span>
			cur_line_2d <span class="token operator">=</span> <span class="token keyword">null</span>
		<span class="token keyword">else</span><span class="token punctuation">:</span>
			brush_position <span class="token operator">=</span> event<span class="token punctuation">.</span>position
			ink_position <span class="token operator">=</span> event<span class="token punctuation">.</span>position
			point_position <span class="token operator">=</span> event<span class="token punctuation">.</span>position

<span class="token keyword">func</span> <span class="token function">_input_event_key</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span> <span class="token class-name">InputEventKey</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	<span class="token keyword">match</span> event<span class="token punctuation">.</span>keycode<span class="token punctuation">:</span>
		<span class="token constant">KEY_SPACE</span><span class="token punctuation">:</span>
			<span class="token comment"># 清空所有线条</span>
			<span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">.</span><span class="token function">get_children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
				line<span class="token punctuation">.</span><span class="token function">queue_free</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">add_line2d</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Line2D</span><span class="token punctuation">:</span>
	<span class="token keyword">var</span> line2d <span class="token operator">:=</span> default_line<span class="token punctuation">.</span><span class="token function">duplicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>		\\
			<span class="token keyword">if</span> <span class="token function">is_instance_valid</span><span class="token punctuation">(</span>default_line<span class="token punctuation">)</span>	\\
			<span class="token keyword">else</span> Line2D<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	lines<span class="token punctuation">.</span><span class="token function">add_child</span><span class="token punctuation">(</span>line2d<span class="token punctuation">)</span>
	<span class="token keyword">return</span> line2d

<span class="token keyword">func</span> <span class="token function">add_point</span><span class="token punctuation">(</span>point<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> <span class="token function">is_instance_valid</span><span class="token punctuation">(</span>cur_line_2d<span class="token punctuation">)</span><span class="token punctuation">:</span>
		cur_line_2d<span class="token punctuation">.</span><span class="token function">add_point</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span>
	<span class="token keyword">else</span><span class="token punctuation">:</span>
		cur_line_2d <span class="token operator">=</span> <span class="token function">add_line2d</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">update_ink</span><span class="token punctuation">(</span>delta<span class="token punctuation">:</span> <span class="token class-name">float</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	<span class="token keyword">var</span> d <span class="token operator">:=</span> brush_position<span class="token punctuation">.</span><span class="token function">distance_squared_to</span><span class="token punctuation">(</span>ink_position<span class="token punctuation">)</span>
	<span class="token keyword">var</span> s <span class="token operator">:=</span> smooth <span class="token operator">*</span> sensitivity <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> sensitivity <span class="token operator">+</span> d<span class="token punctuation">)</span>

	delta <span class="token operator">/=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> delta<span class="token punctuation">)</span> <span class="token operator">*</span> s <span class="token operator">+</span> delta<span class="token punctuation">)</span> <span class="token comment"># delta = exp(s * log(delta))</span>
	delta <span class="token operator">=</span> <span class="token function">clamp</span><span class="token punctuation">(</span>delta<span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

	<span class="token keyword">var</span> delta_position <span class="token operator">:=</span> brush_position <span class="token operator">-</span> ink_position
	ink_position <span class="token operator">+=</span> delta_position <span class="token operator">*</span> delta

<span class="token keyword">func</span> <span class="token function">update_point</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	<span class="token keyword">var</span> d <span class="token operator">:=</span> ink_position<span class="token punctuation">.</span><span class="token function">distance_squared_to</span><span class="token punctuation">(</span>point_position<span class="token punctuation">)</span>

	<span class="token keyword">if</span> d <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span>
		<span class="token function">add_point</span><span class="token punctuation">(</span>point_position<span class="token punctuation">)</span>
		point_position <span class="token operator">=</span> ink_position

<span class="token keyword">func</span> <span class="token function">_process</span><span class="token punctuation">(</span>delta<span class="token punctuation">:</span> <span class="token class-name">float</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> is_left_pressed<span class="token punctuation">:</span>
		<span class="token function">update_ink</span><span class="token punctuation">(</span>delta<span class="token punctuation">)</span>
		<span class="token function">update_point</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="许可协议" tabindex="-1"><a class="header-anchor" href="#许可协议" aria-hidden="true">#</a> 许可协议</h2>`,3),y={class:"custom-container warning"},w=n("p",{class:"custom-container-title"},"注意",-1),x={href:"//shao.fun",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"shao.fun",-1),I={class:"custom-container info"},L={class:"custom-container-title"},M=r({__name:"godot-smooth-brush.html",setup(S){const p=d("");return k(()=>{let o=window.setInterval(()=>{const e=document.querySelectorAll(".contributor");e.length>0&&(p.value=Array.from(e).map(a=>a.textContent).join(", "),window.clearInterval(o))})}),(o,e)=>{const a=i("ExternalLinkIcon"),u=i("RouterLink");return v(),b("div",null,[_,n("p",null,[s("repo: "),n("a",f,[s("https://github.com/HK-SHAO/Plotter"),t(a)])]),g,n("div",y,[w,n("p",null,[s("本站所有内容均使用 MIT 协议，请遵守 "),t(u,{to:"/LICENSE.html"},{default:m(()=>[s("此协议")]),_:1}),s(" 。转载请标明出处："),n("a",x,[E,t(a)])])]),n("div",I,[n("p",L,"Copyright © 2019-"+l(new Date().getFullYear())+" "+l(p.value),1)])])}}}),C=h(M,[["__file","godot-smooth-brush.html.vue"]]);export{C as default};
