import{e as k,f as m,g as v,r as l,o as i,c as r,a as n,b as s,d as e,w as h,t as u,h as t,_ as g}from"./app.d9ef6744.js";const b=t('<h1 id="一些使用-godot-引擎的小技巧" tabindex="-1"><a class="header-anchor" href="#一些使用-godot-引擎的小技巧" aria-hidden="true">#</a> 一些使用 Godot 引擎的小技巧</h1><div class="custom-container warning"><p class="custom-container-title">注意</p><p>本页面仅用于我的个人记录，内容比较杂乱</p></div><h2 id="在-fragment-shader-里使用摄像机" tabindex="-1"><a class="header-anchor" href="#在-fragment-shader-里使用摄像机" aria-hidden="true">#</a> 在 fragment shader 里使用摄像机</h2><ul><li>将 Godot 中的摄像机与 shader 中的摄像机关联起来</li></ul><h3 id="相关知识" tabindex="-1"><a class="header-anchor" href="#相关知识" aria-hidden="true">#</a> 相关知识</h3>',5),_={href:"https://www.shadertoy.com/",target:"_blank",rel:"noopener noreferrer"},f=n("li",null,[n("p",null,"通常不同的平台和游戏引擎用着不同的 shader 语言，但都大同小异。它们语法很相似，类似 C 语言，只是在结构、各别语法或 GPU API 不同而已")],-1),w=n("li",null,[n("p",null,"如何将 shadertoy 中非常惊艳的，基于 SDF、Ray marching 的 fragment shader 移植到 Godot 中呢？")],-1),y=n("h3",{id:"相关链接",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#相关链接","aria-hidden":"true"},"#"),s(" 相关链接")],-1),x={href:"https://www.iquilezles.org/www/articles/normalsSDF/normalsSDF.htm",target:"_blank",rel:"noopener noreferrer"},T={href:"https://space.bilibili.com/10707223",target:"_blank",rel:"noopener noreferrer"},V={href:"https://www.bilibili.com/video/BV1PS4y1j7Xg/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://docs.godotengine.org/zh_CN/stable/tutorials/shaders/converting_glsl_to_godot_shaders.html",target:"_blank",rel:"noopener noreferrer"},S=n("h3",{id:"关键代码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#关键代码","aria-hidden":"true"},"#"),s(" 关键代码")],-1),Q={href:"https://github.com/HK-SHAO/Plotter",target:"_blank",rel:"noopener noreferrer"},C=t(`<ul><li>传递摄像机的 transform 到 shader 的 uniform</li></ul><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code><span class="token keyword">extends</span> <span class="token class-name">Node</span>

@<span class="token keyword">export</span> <span class="token keyword">var</span> camera<span class="token punctuation">:</span> <span class="token class-name">Camera3D</span>

<span class="token keyword">var</span> material<span class="token punctuation">:</span> <span class="token class-name">ShaderMaterial</span>


<span class="token keyword">func</span> <span class="token function">_ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	material <span class="token operator">=</span> <span class="token function">get_parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>material


<span class="token keyword">func</span> <span class="token function">_process</span><span class="token punctuation">(</span>delta<span class="token punctuation">:</span> <span class="token class-name">float</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>

	<span class="token keyword">var</span> camera_position <span class="token operator">:=</span> camera<span class="token punctuation">.</span>transform<span class="token punctuation">.</span>origin
	<span class="token keyword">var</span> camera_rotation <span class="token operator">:=</span> camera<span class="token punctuation">.</span>transform<span class="token punctuation">.</span>basis

	material<span class="token punctuation">.</span><span class="token function">set_shader_parameter</span><span class="token punctuation">(</span>
		<span class="token string">&quot;camera_position&quot;</span><span class="token punctuation">,</span> camera_position<span class="token punctuation">)</span>

	material<span class="token punctuation">.</span><span class="token function">set_shader_parameter</span><span class="token punctuation">(</span>
		<span class="token string">&quot;camera_rotation&quot;</span><span class="token punctuation">,</span> camera_rotation<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修复 fragment shader 中的 UV</li><li><code>uniform float ratio</code> 是此画布的长宽比</li></ul><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">uniform</span> <span class="token keyword">float</span> ratio <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>
<span class="token keyword">uniform</span> <span class="token keyword">vec3</span> camera_position<span class="token punctuation">;</span>
<span class="token keyword">uniform</span> <span class="token keyword">mat3</span> camera_rotation<span class="token punctuation">;</span>

<span class="token keyword">vec2</span> <span class="token function">fixedUV</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> uv<span class="token punctuation">,</span> <span class="token keyword">float</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">vec2</span> p <span class="token operator">=</span> <span class="token number">2.0</span> <span class="token operator">*</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">1.</span> <span class="token operator">-</span> uv<span class="token punctuation">.</span>x<span class="token punctuation">,</span> uv<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1.0</span><span class="token punctuation">;</span>
	p <span class="token operator">=</span> r<span class="token operator">&gt;</span><span class="token number">1.0</span><span class="token operator">?</span><span class="token keyword">vec2</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>x<span class="token punctuation">,</span> p<span class="token punctuation">.</span>y<span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">vec2</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>x<span class="token operator">/</span>r<span class="token punctuation">,</span> p<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> p<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">vertex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	UV <span class="token operator">=</span> <span class="token function">fixedUV</span><span class="token punctuation">(</span>UV<span class="token punctuation">,</span> ratio<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>设置 <code>ro</code>、<code>ca</code>、<code>rd</code></li></ul><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">vec3</span> ro <span class="token operator">=</span> camera_position<span class="token punctuation">;</span>
<span class="token keyword">mat3</span> ca <span class="token operator">=</span> camera_rotation<span class="token punctuation">;</span>
<span class="token keyword">vec3</span> rd <span class="token operator">=</span> ca <span class="token operator">*</span> <span class="token function">normalize</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token keyword">vec3</span><span class="token punctuation">(</span>UV<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修复-shader-中的-uv" tabindex="-1"><a class="header-anchor" href="#修复-shader-中的-uv" aria-hidden="true">#</a> 修复 shader 中的 UV</h2>`,7),E=n("code",null,"UV.x",-1),U=n("code",null,"UV.y",-1),L={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},I={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.287ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2778.7 1000"},D=t('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(278,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1056,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1556,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(2000.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2500.7,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width:3;"></path></g></g></g>',1),N=[D],z=n("li",null,"保证视觉上的长宽比，使得图形不被压缩或拉伸",-1),G={href:"https://docs.godotengine.org/zh_CN/latest/tutorials/shaders/shader_reference/canvas_item_shader.html",target:"_blank",rel:"noopener noreferrer"},M=t(`<h3 id="相关知识-1" tabindex="-1"><a class="header-anchor" href="#相关知识-1" aria-hidden="true">#</a> 相关知识</h3><p>在 shadertoy 中，fragment shader 通常开头会先计算 UV</p><div class="language-glsl" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">vec2</span> uv <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> fragCoord <span class="token operator">-</span> iResolution<span class="token punctuation">.</span>xy<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">min</span><span class="token punctuation">(</span>iResolution<span class="token punctuation">.</span>x<span class="token punctuation">,</span> iResolution<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="相关链接-1" tabindex="-1"><a class="header-anchor" href="#相关链接-1" aria-hidden="true">#</a> 相关链接</h3>`,4),P={href:"https://zh.wikipedia.org/wiki/UV%E5%9D%90%E6%A0%87",target:"_blank",rel:"noopener noreferrer"},R=n("h3",{id:"关键代码-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#关键代码-1","aria-hidden":"true"},"#"),s(" 关键代码")],-1),q={href:"https://github.com/HK-SHAO/Plotter",target:"_blank",rel:"noopener noreferrer"},A=t(`<ul><li>使用工具脚本同步 shader 中画布的长宽比 <code>ratio</code></li></ul><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code>@<span class="token keyword">tool</span>

<span class="token keyword">extends</span> <span class="token class-name">Node</span>

<span class="token keyword">var</span> material<span class="token punctuation">:</span> <span class="token class-name">ShaderMaterial</span>
<span class="token keyword">var</span> control<span class="token punctuation">:</span> <span class="token class-name">Control</span>


<span class="token keyword">func</span> <span class="token function">_ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	control <span class="token operator">=</span> <span class="token function">get_parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">Control</span>
	material <span class="token operator">=</span> control<span class="token punctuation">.</span>material
	control<span class="token punctuation">.</span>resized<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>on_size_changed<span class="token punctuation">)</span>
	<span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">func</span> <span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	<span class="token keyword">var</span> ratio <span class="token operator">:=</span> control<span class="token punctuation">.</span>size<span class="token punctuation">.</span>y <span class="token operator">/</span> control<span class="token punctuation">.</span>size<span class="token punctuation">.</span>x
	material<span class="token punctuation">.</span><span class="token function">set_shader_parameter</span><span class="token punctuation">(</span><span class="token string">&quot;ratio&quot;</span><span class="token punctuation">,</span> ratio<span class="token punctuation">)</span>


<span class="token keyword">func</span> <span class="token function">on_size_changed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
	<span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果画布占满窗口，可以在 shader 中这样计算 <code>ratio</code></li></ul><div class="language-glsl" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">float</span> ratio <span class="token operator">=</span> SCREEN_PIXEL_SIZE<span class="token punctuation">.</span>x <span class="token operator">/</span> SCREEN_PIXEL_SIZE<span class="token punctuation">.</span>y<span class="token punctuation">;</span>
</code></pre></div><ul><li>修复 UV</li><li><code>uv</code> 即 <code>UV</code> ， <code>r</code> 即 <code>ratio</code></li></ul><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">uniform</span> <span class="token keyword">float</span> ratio <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>

<span class="token keyword">vec2</span> <span class="token function">fixedUV</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> uv<span class="token punctuation">,</span> <span class="token keyword">float</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">vec2</span> p <span class="token operator">=</span> <span class="token number">2.0</span><span class="token operator">*</span><span class="token keyword">vec2</span><span class="token punctuation">(</span>uv<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token number">1.0</span> <span class="token operator">-</span> uv<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1.0</span><span class="token punctuation">;</span>
	p <span class="token operator">=</span> r<span class="token operator">&gt;</span><span class="token number">1.0</span><span class="token operator">?</span><span class="token keyword">vec2</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>x<span class="token punctuation">,</span> p<span class="token punctuation">.</span>y<span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">vec2</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>x<span class="token operator">/</span>r<span class="token punctuation">,</span> p<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> p<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>另一种已知 shadertoy 代码计算 <code>uv</code> 的方法</li></ul><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">vec2</span> fragCoord <span class="token operator">=</span> FRAGCOORD<span class="token punctuation">.</span>xy<span class="token punctuation">;</span>
<span class="token keyword">vec2</span> resolution <span class="token operator">=</span> <span class="token number">1.</span> <span class="token operator">/</span> SCREEN_PIXEL_SIZE<span class="token punctuation">.</span>xy<span class="token punctuation">;</span>
<span class="token keyword">vec2</span> uv <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2.</span> <span class="token operator">*</span> fragCoord <span class="token operator">-</span> resolution<span class="token punctuation">.</span>xy<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">min</span><span class="token punctuation">(</span>resolution<span class="token punctuation">.</span>x<span class="token punctuation">,</span> resolution<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="许可协议" tabindex="-1"><a class="header-anchor" href="#许可协议" aria-hidden="true">#</a> 许可协议</h2>`,9),Z={class:"custom-container warning"},B=n("p",{class:"custom-container-title"},"注意",-1),F={href:"//shao.fun",target:"_blank",rel:"noopener noreferrer"},O=n("code",null,"shao.fun",-1),j={class:"custom-container info"},X={class:"custom-container-title"},K=k({__name:"some-godot-tips.html",setup(J){const p=m("");return v(()=>{let c=window.setInterval(()=>{const o=document.querySelectorAll(".contributor");o.length>0&&(p.value=Array.from(o).map(a=>a.textContent).join(", "),window.clearInterval(c))})}),(c,o)=>{const a=l("ExternalLinkIcon"),d=l("RouterLink");return i(),r("div",null,[b,n("ul",null,[n("li",null,[n("p",null,[n("a",_,[s("https://www.shadertoy.com/"),e(a)]),s(" 中有许多非常棒的 shader ，它们所呈现的各种视觉效果很让人兴奋。同时，这也是一个 shader 宝藏，很多 shader 可以被移植到一些图形程序中，例如游戏、播放器、图像处理软件等")])]),f,w]),y,n("ul",null,[n("li",null,[s("iq 佬："),n("a",x,[s("https://www.iquilezles.org/www/articles/normalsSDF/normalsSDF.htm"),e(a)])]),n("li",null,[s("推荐 pdcxs 佬的 shader 教程："),n("a",T,[s("https://space.bilibili.com/10707223"),e(a)])]),n("li",null,[s("shadertoy 教程 08 - 3D 摄像机设置："),n("a",V,[s("https://www.bilibili.com/video/BV1PS4y1j7Xg/"),e(a)])]),n("li",null,[s("Godot docs："),n("a",H,[s("将 GLSL 转换为 Godot 着色器"),e(a)])])]),S,n("p",null,[s("repo: "),n("a",Q,[s("https://github.com/HK-SHAO/Plotter"),e(a)])]),C,n("ul",null,[n("li",null,[s("坐标原点从屏幕中心开始，且 "),E,s(" 或 "),U,s(" 介于 "),n("mjx-container",L,[(i(),r("svg",I,N))]),s(" 之间")]),z,n("li",null,[s("Godot docs："),n("a",G,[s("CanvasItem 着色器"),e(a)])])]),M,n("ul",null,[n("li",null,[n("a",P,[s("UV 坐标"),e(a)])])]),R,n("p",null,[s("repo: "),n("a",q,[s("https://github.com/HK-SHAO/Plotter"),e(a)])]),A,n("div",Z,[B,n("p",null,[s("本站所有内容均使用 MIT 协议，请遵守 "),e(d,{to:"/LICENSE.html"},{default:h(()=>[s("此协议")]),_:1}),s(" 。转载请标明出处："),n("a",F,[O,e(a)])])]),n("div",j,[n("p",X,"Copyright © 2019-"+u(new Date().getFullYear())+" "+u(p.value),1)])])}}}),W=g(K,[["__file","some-godot-tips.html.vue"]]);export{W as default};
